@using MobileApplication.UI.InfraStructure;
@using MobileApplication.DataModel;

@model MobileApplication.DataModel.ControlPanel.NamesOfAllahModels.NameOfAllahModel
@{
    ViewBag.Title = "AddEdit";
}

@section NavigationBar{
    @{Html.RenderPartial("_PagePath", new PagePath { PageTitle = " إضافة/تعديل أسم", ParentPath = "الرئيسية,إدارة أسماء الله الحسني", ParentURLs = "/ControlPanel/DashBoard/Default,/ControlPanel/NamesOfAllah/Default" });  }
}

<div class="container">
    @using (Ajax.BeginForm("Save", "NamesOfAllah", new AjaxOptions
    {
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "POST",
        OnSuccess = "Success"
    }, new { @id = "AddEditNamesOfAllahForm", autocomplete = "off" }))
    {
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.ID)

        <div class="panel panel-green">
            <div class="row setup-content" id="step-1">
                <div class="col-xs-12">
                    <div class="col-md-12 well">

                        <div class="panel-heading">
                            @if (Model.ID == null || Model.ID == 0) //add  mode
                            {
                                <h4>إضافة أسم</h4>
                            }
                            else  //Edit mode
                            {
                                <h4>تعديل أسم</h4>
                            }
                        </div>
                        <div class="panel-body" ng-controller="AddEditNamesOfAllahController">
                            <div class="form-horizontal">
                                <div class="form-group">
                                    <div class="row">
                                        <label class="col-sm-3 control-label">الاسم</label>
                                        <div class="col-sm-6">
                                            @Html.TextBoxFor(x => x.NameOfAllah, new { @class = "form-control" })

                                            @Html.ValidationMessageFor(model => model.NameOfAllah, null,
                                                    new
                                                    {
                                                        @Class = "errorMsg",
                                                        @id = "TitleValidation"
                                                    })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">
                                        <label class="col-sm-3 control-label">رقم الاسم</label>
                                        <div class="col-sm-6">
                                            @Html.TextBoxFor(x => x.Number, new { @class = "form-control", placeholder = "رقم الاسم" })

                                            @Html.ValidationMessageFor(model => model.Number, null,
                                                    new
                                                    {
                                                        @Class = "errorMsg",
                                                        @id = "TitleValidation"
                                                    })
                                        </div>
                                    </div>
                                </div>
                                

                                <div class="form-group">
                                    <div class="row">
                                        <label class="col-sm-3 control-label">معني الأسم</label>
                                        <div class="col-sm-6">
                                            @Html.TextAreaFor(x => x.NameOfAllahMeaning, new { @Style = "width: 680px; height: 280px; resize: none", TextMode = "MultiLine", @class = "form-control must-validate" })

                                            @Html.ValidationMessageFor(model => model.NameOfAllahMeaning, null,
                                                    new
                                                    {
                                                        @Class = "errorMsg",
                                                        @id = "TitleValidation"
                                                    })
                                        </div>
                                    </div>
                                </div>

                               

                                <div class="form-group">
                                    <div class="row">
                                        <label class="col-sm-3 control-label">الصورة</label>
                                        <div class="col-sm-6">
                                           @Html.TextBoxFor(x => x.NameOfAllahImage, new { @class = "form-control must-validate" })
                                            @Html.ValidationMessageFor(model => model.NameOfAllahImage, null,
                                                    new
                                                    {
                                                        @Class = "errorMsg",
                                                        @id = "TitleValidation"
                                                    })
                                        </div>
                                    </div>
                                   
                                </div>
                            </div>


                        </div>
                        <div class="panel-footer">
                            <div class="row">

                                <div class="btn-toolbar pull-left">
                                    <button class="btn-primary btn" name="command" type="submit" value="Save">حفظ</button>
                                    <button class="btn-primary btn" name="command" type="submit" value="SaveAndReturn">حفظ و خروج</button>
                                    <a href="/ControlPanel/NamesOfAllah/Default" class="btn-default btn"> خروج </a>

                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @section script {
            @Html.Partial("_Popup")
        }
    }


</div>

@*<link href="~/JSPlugins/QVSqweezeImageUploader/QVSqweezeImageUploader.css" rel="stylesheet" />*@
<link href="~/JSPlugins/QVUploader2/QVUploader2.css" rel="stylesheet" />
<link href="~/JSPlugins/QVEditor/qv_editor.css" rel="stylesheet" />
<script src="~/JSPlugins/QVEditor/qv_editor.js"></script>
@*<script src="~/JSPlugins/QVSqweezeImageUploader/QVSqweezeImageUploader.js"></script>*@
<script src="~/JSPlugins/QVUploader2/QVUploader2.js"></script>
<script>
    console.log("helloooooooooooooooooooooo")

    $("#NameOfAllahImage").QVUploader2({ width: '100', height: '90', type: 'jpg,jpeg,png', size: '2', path: '/DataUpload/NameOfAllah/Image/', isCropImage: true });
    //setTimeout(function () {
    //    $('#NameOfAllahImage').rules("add", { required: true, messages: { required: "لا يمكن ترك هذه الخانة فارغة" } });
    //}, 0);
    $('#NameOfAllahMeaning').QVEditor();
    function Success(data) {
        if (data.ID > 0) {
            debugger;
            ShowConfirmatiomMessage("تأكيد", " تم الحفظ بنجاح");

            if (data.command == "Save") {
                window.location = "/ControlPanel/NamesOfAllah/Add/0";
            }
            else {
                window.location = "/ControlPanel/NamesOfAllah/Default";
            }
        }
        else { ShowErrorMessage(); }
    }

    jQuery.validator.addMethod("RequiredEditor", function (value, element) {
        var html = $(element).val();

        if ($(html).text() == "") {
            return false;
        } else {
            return true;
        }

    }, '@MobileApplication.DataModel.QvDataAnnotation.ValidationMessages.RequiredField');

    //$("#NameOfAllahMeaning").rules("add", "RequiredEditor");
    

</script>
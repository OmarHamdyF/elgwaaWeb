@model MobileApplication.UI.InfraStructure.ManageModel

<script type="text/javascript">

    var ControllerName = "@Model.ControllerName";
    var ModelName = "@Model.ModelName";
    var AreaName = "@Model.AreaName";
    var ModalPopUpId = "@Model.ModalPopUpId";

    app.controller('ManageController', ['$scope', '$controller', '$http', "$q", '$filter', '$location', '$sce', '$timeout', '$resource', 'NgTableParams', function ($scope, $controller, $http, $q, $filter, $location, $sce, $timeout, $resource, NgTableParams) {
        $scope.addText = "إضافة/تعديل";
        $scope.editText = "إضافة/تعديل";
        $.extend(this, $controller('TableController', { $scope: $scope }));


        //--------------------------------------------------search

        $scope.search = function () {
    debugger
            if ($("form").hasClass("ng-valid") == true) {
                var clonedSearchObject = angular.copy($scope.searchObject);
                $scope.tableParams.filter(clonedSearchObject);
            }
        };

        $scope.viewAll = function () {
            debugger;
            $scope.tableParams.filter({});
            $scope.searchObject = {};
        };

        $scope.initSearch = function (namesArray,valusArray) {
            debugger;
            if (namesArray && valusArray) {
                $scope.searchObject = {};
                for (var i = 0; i < namesArray.length; i++) {
                    $scope.searchObject[namesArray[i]] = valusArray[i];
                }

                $scope.filter = angular.copy($scope.searchObject);
                $scope.tableParams.filter($scope.filter);
            }

        };

        $scope.checkSearchQuery = function () {
            var q = window.location.search;
            if (q.length > 0 && q.indexOf("q=") > -1)
            {
                q = q.split("=")[1];
                $scope.searchObject = JSON.parse(decodeURIComponent(q));
                console.log($scope.searchObject);
                $scope.search();
            }
            console.log($location)
        }
        $scope.checkSearchQuery();
        //--------------------------------------------------Delete

        $scope.DeleteCallback = function ($index) {
            $scope.tableParams.data.splice($index, 1);
            $scope.$apply();
            $scope.tableParams.reload();
        };

        $scope.Delete = function ($event, obj, $index) {
            debugger
            var FormObject =
            {
                Controller: ControllerName,
                Action: "Delete",
                Id: obj.ID
            };
            if (AreaName.length > 0) {
                FormObject.Area = AreaName;
            }
            ShowConfirmDeleteMessage("حذف", "هل أنت متأكد من حذف " + ModelName + " ؟", FormObject, function () {
                $scope.DeleteCallback($index);
            });
        };

        //-------------------------------------------------------Cancel

        $scope.Cancel = function ($event, obj, $index,stringText,itemNumber) {
            debugger
            var FormObject =
            {
                Controller: ControllerName,
                Action: "Cancel",
                Id: obj.ID,
                Number: obj.DocumentNumber
            };
            if (AreaName.length > 0) {
                FormObject.Area = AreaName;
            }
            //debugger;
            ShowConfirmCancelMessage("إلغاء", " هل أنت متأكد من إلغاء   " + stringText +" " + itemNumber + " ؟", FormObject, function () {
                $scope.tableParams.reload();
               // $scope.DeleteCallback($index);
            });
        };

        //--------------------------------------------------AddEdit

        $scope.AddEdit = function (obj) {
            debugger
            //document.getElementById("btn_save").disabled = false;
            //$("#" + ModalPopUpId + ".field-validation-error").html("");
            // reset form validation
            $("#" + ModalPopUpId).resetValidation();
            if (obj == 0 || obj == undefined) {
                // reset form inputs
                $("#" + ModalPopUpId).resetForm();
                // popup scope
                $scope.PopupTitle = $scope.addText;
                $scope.AddMode = true;
                $scope.CurModel = {};
                // $scope.SelectedUnit = {};
            } else {
                $scope.PopupTitle = $scope.editText;
                $scope.AddMode = false;
                $scope.CurModel = angular.copy(obj);
            }
            $("#" + ModalPopUpId + "").modal("show");
            // remove first select option generated by angluar
            setTimeout(function () {
                $('#' + ModalPopUpId + ' select option[value="? object:null ?"]').remove()
            }, 200);
        };

        //--------------------------------------------------Save

        $scope.Save = function () {
            debugger;
            for (var i = 0 ; i < $("[data-val-remote]").length ; i++) {
                //console.log("#" + $("[data-val-remote]")[i].getAttribute('id'))
                var id =( "#" + $("[data-val-remote]")[i].getAttribute('id')).toString();
                console.log(id)
                $("#ModelForm").validate().element(id)
            }
            document.getElementById("btn_save").disabled = true;
            $("#ModelForm").trigger("foucs");
            document.getElementById("btn_save").disabled = true;
            clearCachedRemoteValidationData();
            if ($("#" + ModalPopUpId + " #ModelForm").valid()) {

                ControlPanelApp.showLoadingOnSave();
                $scope.remoteValidate().then(function () {

                    $http({
                        method: 'POST',
                        url: '/' + AreaName + '/' + ControllerName + '/Save',
                        data: $scope.CurModel
                    }).success(function (data, status, headers, config) {
                        debugger
                        $scope.tableParams.reload();
                        $("#" + ModalPopUpId + "").modal("hide");

                        clearCachedRemoteValidationData();

                        ShowConfirmatiomMessage("تأكيد", "  تم الحفظ بنجاح ");
                        ControlPanelApp.hideLoadingOnSave();

                    });
                }).catch(function () {
                    ControlPanelApp.hideLoadingOnSave();
                });
            }
            else {
                document.getElementById("btn_save").disabled = false;
            }
        };

        //--------------------------------------------------cancel

        $scope.cancel = function () {
            $("#" + ModalPopUpId + "").modal("hide");
        };

        //--------------------------------------------------remoteValidate

        $scope.remoteValidate = function () {
            debugger;

            var deferred = $q.defer();

            var validator = $('#' + ModalPopUpId + ' #ModelForm').data('validator');
            console.log($http.pendingRequests.length);
            if (validator.pendingRequest == 0) {
                deferred.resolve();
            }
            else {
                //There is a remote validation still in place
                var oldStopRequest = validator.stopRequest;
                validator.stopRequest = function (element, valid) {

                   // oldStopRequest.apply(this, arguments);
                    if (valid) {
                        deferred.resolve();
                    }
                    else {

                        deferred.reject();
                    }
                };
            }
            return deferred.promise
        }

        //--------------------------------------------------Resend Mail Option

        $scope.ResendEmail = function ($event, obj) {
            $http({
                method: 'POST',
                url: '/' + AreaName + '/' + ControllerName + '/ResendPasswordMail',
                data: { 'iClientID': obj.ID }
            }).success(function (data, status, headers, config) {
                $scope.tableParams.reload();
                $("#" + ModalPopUpId + "").modal("hide");
                ShowConfirmatiomMessage("تأكيد", "سيتم إرسال البريد الإلكترونى فى أقرب وقت ممكن. ");
            });

        }

        var clearCachedRemoteValidationData = function () {
            $("#" + ModalPopUpId + " #ModelForm input").each(function () {
                $(this).removeData("previousValue");

            });

        }




    }]);

</script>

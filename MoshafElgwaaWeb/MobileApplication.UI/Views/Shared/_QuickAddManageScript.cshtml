@model MobileApplication.UI.InfraStructure.ManageModel
@Html.Partial("_Popup")

<script type="text/javascript">
    
    var ControllerName = "@Model.ControllerName";
    var AreaName = "@Model.AreaName";
    var ModalPopUpId = "@Model.ModalPopUpId";
    var DropdownListId="";
    var CallBackFunction = "";
    var modelName= "";

    simpleApp.controller('QuickAddManageController', ['$scope', '$controller', '$http', "$q", '$filter', '$timeout', function ($scope, $controller, $http, $q, $filter, $timeout) {
        $scope.addText = "إضافة/تعديل";
        $scope.editText = "إضافة/تعديل";


        //--------------------------------------------------AddEdit

        $scope.AddEdit = function (popupId, controllerName, callBack, dropdownlistId,model, obj) {
          debugger
         
            CallBackFunction = callBack;
            DropdownListId = dropdownlistId;
            modelName = model;
            // reset form validation
            if (popupId) {
                ModalPopUpId = popupId
            }
            if (controllerName) {
                ControllerName = controllerName;
            }
            $('#' + ModalPopUpId + ' #ModelForm').resetValidation();
            if (obj == 0 || obj==undefined) {
                // reset form inputs
                $('#' + ModalPopUpId + ' #ModelForm').resetForm();
                // popup scope
                $scope.PopupTitle = $scope.addText;
                $scope.AddMode = true;
                $scope.CurModel = {};
                // $scope.SelectedUnit = {};
            } else {
                $scope.PopupTitle = $scope.editText;
                $scope.AddMode = false;
                $scope.CurModel = angular.copy(obj);
            }
            $("#" + ModalPopUpId + "").modal("show");
            // remove first select option generated by angluar
            setTimeout(function () {
                $('#' + ModalPopUpId + ' select option[value="? object:null ?"]').remove()
            }, 200);
        };

        //--------------------------------------------------Save

        $scope.Save = function (e)
        {
            debugger

           // e.preventDefault();
            $("#" + ModalPopUpId + " #btn_save").attr('disabled', true);

            for (var i = 0 ; i < $("#" + ModalPopUpId + " #ModelForm [data-val-remote]").length ; i++) {
                var id = ("#" + $("#" + ModalPopUpId + " #ModelForm [data-val-remote]")[i].getAttribute('id')).toString();
                $("#" + ModalPopUpId +"#ModelForm"+id).removeData("previousValue")
                $("#" + ModalPopUpId + " #ModelForm").validate().element(id)
            }
            $("#" + ModalPopUpId + " #ModelForm").trigger("foucs");
            clearCachedRemoteValidationData();
            if ($("#" + ModalPopUpId + " #ModelForm").valid()) {

               ControlPanelApp.showLoadingOnSave();
                $scope.remoteValidate().then(function () {
                    debugger;
                    $http({
                        method: 'POST',
                        url: '/' + AreaName + '/' + ControllerName + '/Save?logActionName='+'/' + AreaName + '/' + ControllerName + '/Default',
                        data: $scope.CurModel
                    }).success(function (data, status, headers, config) {
                        debugger
                        $("#" + ModalPopUpId + "").modal("hide");
                        $("#" + ModalPopUpId + " #btn_save").attr('disabled', false);

                        clearCachedRemoteValidationData();

                        ShowConfirmatiomMessage("تأكيد", "  تم الحفظ بنجاح ");
                        ControlPanelApp.hideLoadingOnSave();
                        if (DropdownListId) {
                            var input = $(document).find("#" + DropdownListId);
                            input.append($('<option>', { value: data.ID, text: $scope.CurModel.Name }))
                            $(document).find("#" + DropdownListId).val(data.ID).attr('selected', 'selected');
                          
                            //$compile(angular.element(input))(scope);
                            //$(input).trigger("input");
                          
                            if (modelName) {
                                var scope = angular.element(input).scope();
                                var model = scope[modelName];
                                model[DropdownListId] = data.ID;
                                $timeout(function () {
                                    $("select option").each(function (e, obj) {
                                        if ($(obj).val().indexOf('?') > -1) { $(obj).remove(); }
                                    });
                                    $(document).find("#" + DropdownListId).val(data.ID).attr('selected', 'selected');

                                });
                            }
                            else $(document).find("#" + DropdownListId).val(data.ID).attr('selected', 'selected');

                           
                        }
                        if (CallBackFunction) {
                             
                            CallBackFunction({ ID: data.ID, Name: $scope.CurModel.Name })
                        }
                       

                    });
                }).catch(function () {
                   // debugger;
                    ControlPanelApp.hideLoadingOnSave();
                    $("#" + ModalPopUpId + " #btn_save").attr('disabled', false);


                });
            }
            else {
                $("#" + ModalPopUpId + " #btn_save").attr('disabled', false);

            }
        };

        //--------------------------------------------------cancel

        $scope.cancel = function () {
            $("#" + ModalPopUpId + "").modal("hide");
            $("#" + ModalPopUpId + " #btn_save").attr('disabled', false);

        };

        //--------------------------------------------------remoteValidate

        $scope.remoteValidate = function () {
        //   debugger;
            var deferred = $q.defer();
            var validator = $('#' + ModalPopUpId + ' #ModelForm').data('validator');
          //  console.log($http.pendingRequests.length);
            if (validator.pendingRequest == 0) {
                deferred.resolve();
            }
            else {
                //There is a remote validation still in place
                var oldStopRequest = validator.stopRequest;
                
                validator.stopRequest = function (element, valid) {
                //    debugger;
                   // oldStopRequest.apply(this, arguments);
                    if (valid) {
                        deferred.resolve();
                    }
                    else {

                        deferred.reject();
                    }
                };
            }
            return deferred.promise
        }


        var clearCachedRemoteValidationData = function () {
            $("#" + ModalPopUpId + " #ModelForm input").each(function () {
                $(this).removeData("previousValue");

            });

        }
    }]);

</script>

